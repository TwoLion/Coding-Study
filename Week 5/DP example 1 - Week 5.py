# 1로 만들기

# 문제

# 정수 X가 주어질 때 정수 X에 사용할 수 잇는 연산은 다음과 같이 4가지이다.
# X가 5로 나누어 떨어지면, 5로 나눈다.
# X가 3으로 나누어 떨어지면, 3으로 나눈다.
# X가 2로 나누어 떨어지면, 2로 나눈다.
# X에서 1을 뺀다.

# 정수 X가 주어졌을 때, 연산 4개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.

# 입력 조건 : 첫째 줄에 정수 X가 주엊니다. (1<= X<= 30,000)
# 출력 : 첫째 줄에 연산을 하는 횟수의 최솟값을 출력한다.


N = int(input())

d = [0]*(30001)

d[2] = d[3] = d[5] = 1
d[1] = 0.1
d[4]=2

for i in range(6, N+1):

    if i%5 ==0:
        if d[i//5]!=0:
            d[i] = 1+d[i//5]

    elif (i-1)%5 ==0 :
        if d[(i-1)//5] !=0:
            d[i] = 2+d[(i-1)//5]

    elif i%3 ==0:
        if d[i//3]!=0:
            d[i] = 1+d[i//3]

    elif (i-1)%3 ==0:
        if d[(i-1)//3]!=0:
            d[i] = 2+d[(i-1)//3]

    elif i%2 ==0:
        if d[i//2] !=0:
            d[i] = 1+d[i//2]
    else:
        if d[i-1] !=0:
            d[i] = 1+d[i-1]



result = list(map(round, d))

print(result[N])


# 맞는 풀이

x = int(input())

d = [0]*30001

for i in range(2, x+1):
    d[i] = d[i-1] +1

    if i%2 ==0:
        d[i]=min(d[i], d[i//2]+1)

    if i%3 ==0:
        d[i] = min(d[i], d[i//3] +1)

    if i%5 ==0:
        d[i] = min(d[i], d[i//5] + 1)


print(d[x])